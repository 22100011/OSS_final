{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksg21\\\\OneDrive\\\\2024-oss-final-project-22100011\\\\newproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReadData from './components/ReadData';\nimport UpdateData from './components/UpdateData';\nimport DeleteData from './components/DeleteData';\nimport CreateData from './components/CreateData';\nimport ModalData from './components/ModalData';\nimport ListData from './components/listData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [GHIData, setGHIData] = useState([]); // GHI 데이터 상태\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태\n  const [currentData, setCurrentData] = useState(null); // 선택된 데이터\n  const [isUpdateMode, setIsUpdateMode] = useState(false); // 업데이트 모드 여부\n\n  // 데이터 읽기 함수\n  const fetchGHI = async () => {\n    try {\n      const response = await fetch('https://6743ce15b7464b1c2a65e803.mockapi.io/GHI');\n      const data = await response.json();\n      setGHIData(data);\n    } catch (error) {\n      console.error('데이터를 가져오는 중 오류 발생:', error);\n    }\n  };\n\n  // 모달 열기\n  const openModal = (data = null, updateMode = false) => {\n    setCurrentData(data);\n    setIsUpdateMode(updateMode);\n    setIsModalOpen(true);\n  };\n\n  // 모달 닫기\n  const closeModal = () => {\n    setCurrentData(null);\n    setIsModalOpen(false);\n  };\n\n  // 데이터 추가\n  const handleCreate = async formData => {\n    await CreateData(formData, fetchGHI);\n    closeModal();\n  };\n\n  // 데이터 업데이트\n  const handleUpdate = async formData => {\n    if (currentData) {\n      await UpdateData(currentData.country, currentData.year, formData, fetchGHI);\n      closeModal();\n    }\n  };\n\n  // 데이터 삭제\n  const handleDelete = async (country, year) => {\n    await DeleteData(country, year, fetchGHI);\n  };\n\n  // 초기 데이터 로드\n  useEffect(() => {\n    fetchGHI();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GHI Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => openModal(),\n      children: \"Add New Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListData, {\n      data: GHIData,\n      onEdit: data => openModal(data, true) // 수정 시 모달 열기\n      ,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReadData, {\n      GHI: GHIData,\n      fetchGHI: fetchGHI,\n      onEdit: openModal,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalData, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      onSubmit: isUpdateMode ? handleUpdate : handleCreate,\n      initialData: currentData,\n      isUpdateMode: isUpdateMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hej+bYSSezG26VRAzMLJGh5+zJE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReadData","UpdateData","DeleteData","CreateData","ModalData","ListData","jsxDEV","_jsxDEV","App","_s","GHIData","setGHIData","isModalOpen","setIsModalOpen","currentData","setCurrentData","isUpdateMode","setIsUpdateMode","fetchGHI","response","fetch","data","json","error","console","openModal","updateMode","closeModal","handleCreate","formData","handleUpdate","country","year","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onEdit","onDelete","GHI","isOpen","onClose","onSubmit","initialData","_c","$RefreshReg$"],"sources":["C:/Users/ksg21/OneDrive/2024-oss-final-project-22100011/newproject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReadData from './components/ReadData';\nimport UpdateData from './components/UpdateData';\nimport DeleteData from './components/DeleteData';\nimport CreateData from './components/CreateData';\nimport ModalData from './components/ModalData';\nimport ListData from './components/listData';\n\nconst App = () => {\n  const [GHIData, setGHIData] = useState([]); // GHI 데이터 상태\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태\n  const [currentData, setCurrentData] = useState(null); // 선택된 데이터\n  const [isUpdateMode, setIsUpdateMode] = useState(false); // 업데이트 모드 여부\n\n  // 데이터 읽기 함수\n  const fetchGHI = async () => {\n    try {\n      const response = await fetch('https://6743ce15b7464b1c2a65e803.mockapi.io/GHI');\n      const data = await response.json();\n      setGHIData(data);\n    } catch (error) {\n      console.error('데이터를 가져오는 중 오류 발생:', error);\n    }\n  };\n\n  // 모달 열기\n  const openModal = (data = null, updateMode = false) => {\n    setCurrentData(data);\n    setIsUpdateMode(updateMode);\n    setIsModalOpen(true);\n  };\n\n  // 모달 닫기\n  const closeModal = () => {\n    setCurrentData(null);\n    setIsModalOpen(false);\n  };\n\n  // 데이터 추가\n  const handleCreate = async (formData) => {\n    await CreateData(formData, fetchGHI);\n    closeModal();\n  };\n\n  // 데이터 업데이트\n  const handleUpdate = async (formData) => {\n    if (currentData) {\n      await UpdateData(currentData.country, currentData.year, formData, fetchGHI);\n      closeModal();\n    }\n  };\n\n  // 데이터 삭제\n  const handleDelete = async (country, year) => {\n    await DeleteData(country, year, fetchGHI);\n  };\n\n  // 초기 데이터 로드\n  useEffect(() => {\n    fetchGHI();\n  }, []);\n\n  return (\n    <div>\n      <h1>GHI Management System</h1>\n      <button onClick={() => openModal()}>Add New Record</button>\n\n      {/* 데이터 목록 표시 */}\n      <ListData\n        data={GHIData}\n        onEdit={(data) => openModal(data, true)} // 수정 시 모달 열기\n        onDelete={handleDelete}\n      />\n\n      {/* 데이터 읽기 */}\n      <ReadData GHI={GHIData} fetchGHI={fetchGHI} onEdit={openModal} onDelete={handleDelete} />\n\n      {/* 데이터 추가/수정 모달 */}\n      <ModalData\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onSubmit={isUpdateMode ? handleUpdate : handleCreate}\n        initialData={currentData}\n        isUpdateMode={isUpdateMode}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}